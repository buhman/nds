#include <stdint.h>
#include <stddef.h>
#define static_assert _Static_assert

struct graphics_engine_a {
  volatile uint32_t DISPCNT;
  volatile uint16_t DISPSTAT;
  volatile uint16_t VCOUNT;
  volatile uint16_t BG0CNT;
  volatile uint16_t BG1CNT;
  volatile uint16_t BG2CNT;
  volatile uint16_t BG3CNT;
  volatile uint16_t BG0HOFS;
  volatile uint16_t BG0VOFS;
  volatile uint16_t BG1HOFS;
  volatile uint16_t BG1VOFS;
  volatile uint16_t BG2HOFS;
  volatile uint16_t BG2VOFS;
  volatile uint16_t BG3HOFS;
  volatile uint16_t BG3VOFS;
  volatile uint16_t BG2PA;
  volatile uint16_t BG2PB;
  volatile uint16_t BG2PC;
  volatile uint16_t BG2PD;
  volatile uint32_t BG2X;
  volatile uint32_t BG2Y;
  volatile uint16_t BG3PA;
  volatile uint16_t BG3PB;
  volatile uint16_t BG3PC;
  volatile uint16_t BG3PD;
  volatile uint32_t BG3X;
  volatile uint32_t BG3Y;
  volatile uint16_t WIN0H;
  volatile uint16_t WIN1H;
  volatile uint16_t WIN0V;
  volatile uint16_t WIN1V;
  volatile uint16_t WININ;
  volatile uint16_t WINOUT;
  volatile uint16_t MOSAIC;
  volatile uint8_t _pad0[2];
  volatile uint16_t BLDCNT;
  volatile uint16_t BLDALPHA;
  volatile uint16_t BLDY;
  volatile uint8_t _pad1[10];
  volatile uint16_t DISP3DCNT;
  volatile uint8_t _pad2[2];
  volatile uint32_t DISPCAPCNT;
  volatile uint32_t DISP_MMEM_FIFO;
  volatile uint16_t MASTER_BRIGHT;
  volatile uint8_t _pad3[66];
  volatile uint32_t DMA0SAD;
  volatile uint32_t DMA0DAD;
  volatile uint32_t DMA0CNT;
  volatile uint32_t DMA1SAD;
  volatile uint32_t DMA1DAD;
  volatile uint32_t DMA1CNT;
  volatile uint32_t DMA2SAD;
  volatile uint32_t DMA2DAD;
  volatile uint32_t DMA2CNT;
  volatile uint32_t DMA3SAD;
  volatile uint32_t DMA3DAD;
  volatile uint32_t DMA3CNT;
  volatile uint8_t _pad4[32];
  volatile uint16_t TM0CNT_L;
  volatile uint16_t TM0CNT_H;
  volatile uint16_t TM1CNT_L;
  volatile uint16_t TM1CNT_H;
  volatile uint16_t TM2CNT_L;
  volatile uint16_t TM2CNT_H;
  volatile uint16_t TM3CNT_L;
  volatile uint16_t TM3CNT_H;
  volatile uint8_t _pad5[32];
  volatile uint16_t KEYINPUT;
  volatile uint16_t KEYCNT;
  volatile uint8_t _pad6[208];
  volatile uint16_t EXMEMCNT;
  volatile uint8_t _pad7[2];
  volatile uint16_t IME;
  volatile uint8_t _pad8[6];
  volatile uint32_t IE;
  volatile uint32_t IF;
  volatile uint8_t _pad9[40];
  volatile uint32_t VRAMCNT;
  volatile uint32_t WVRAMCNT;
  volatile uint16_t VRAM_HI_CNT;
  volatile uint8_t _pad10[54];
  volatile uint16_t DIVCNT;
  volatile uint8_t _pad11[14];
  volatile uint64_t DIV_NUMER;
  volatile uint64_t DIV_DENOM;
  volatile uint64_t DIV_RESULT;
  volatile uint64_t DIVREM_RESULT;
  volatile uint16_t SQRTCNT;
  volatile uint8_t _pad12[2];
  volatile uint32_t SQRT_RESULT;
  volatile uint64_t SQRT_PARAM;
  volatile uint8_t _pad13[68];
  volatile uint16_t POWCNT;
  volatile uint8_t _pad14[26];
  volatile uint16_t RDLINES_COUNT;
  volatile uint8_t _pad15[14];
  volatile uint16_t EDGE_COLOR_0_L;
  volatile uint16_t EDGE_COLOR_0_H;
  volatile uint16_t EDGE_COLOR_1_L;
  volatile uint16_t EDGE_COLOR_1_H;
  volatile uint16_t EDGE_COLOR_2_L;
  volatile uint16_t EDGE_COLOR_2_H;
  volatile uint16_t EDGE_COLOR_3_L;
  volatile uint16_t EDGE_COLOR_3_H;
  volatile uint16_t ALPHA_TEST_REF;
  volatile uint8_t _pad16[14];
  volatile uint32_t CLEAR_COLOR;
  volatile uint16_t CLEAR_DEPTH;
  volatile uint16_t CLRIMAGE_OFFSET;
  volatile uint32_t FOG_COLOR;
  volatile uint16_t FOG_OFFSET;
  volatile uint8_t _pad17[2];
  volatile uint16_t FOG_TABLE_0_L;
  volatile uint16_t FOG_TABLE_0_H;
  volatile uint16_t FOG_TABLE_1_L;
  volatile uint16_t FOG_TABLE_1_H;
  volatile uint16_t FOG_TABLE_2_L;
  volatile uint16_t FOG_TABLE_2_H;
  volatile uint16_t FOG_TABLE_3_L;
  volatile uint16_t FOG_TABLE_3_H;
  volatile uint16_t FOG_TABLE_4_L;
  volatile uint16_t FOG_TABLE_4_H;
  volatile uint16_t FOG_TABLE_5_L;
  volatile uint16_t FOG_TABLE_5_H;
  volatile uint16_t FOG_TABLE_6_L;
  volatile uint16_t FOG_TABLE_6_H;
  volatile uint16_t FOG_TABLE_7_L;
  volatile uint16_t FOG_TABLE_7_H;
  volatile uint16_t TOON_TABLE_0_L;
  volatile uint16_t TOON_TABLE_0_H;
  volatile uint16_t TOON_TABLE_1_L;
  volatile uint16_t TOON_TABLE_1_H;
  volatile uint16_t TOON_TABLE_2_L;
  volatile uint16_t TOON_TABLE_2_H;
  volatile uint16_t TOON_TABLE_3_L;
  volatile uint16_t TOON_TABLE_3_H;
  volatile uint16_t TOON_TABLE_4_L;
  volatile uint16_t TOON_TABLE_4_H;
  volatile uint16_t TOON_TABLE_5_L;
  volatile uint16_t TOON_TABLE_5_H;
  volatile uint16_t TOON_TABLE_6_L;
  volatile uint16_t TOON_TABLE_6_H;
  volatile uint16_t TOON_TABLE_7_L;
  volatile uint16_t TOON_TABLE_7_H;
  volatile uint16_t TOON_TABLE_8_L;
  volatile uint16_t TOON_TABLE_8_H;
  volatile uint16_t TOON_TABLE_9_L;
  volatile uint16_t TOON_TABLE_9_H;
  volatile uint16_t TOON_TABLE_10_L;
  volatile uint16_t TOON_TABLE_10_H;
  volatile uint16_t TOON_TABLE_11_L;
  volatile uint16_t TOON_TABLE_11_H;
  volatile uint16_t TOON_TABLE_12_L;
  volatile uint16_t TOON_TABLE_12_H;
  volatile uint16_t TOON_TABLE_13_L;
  volatile uint16_t TOON_TABLE_13_H;
  volatile uint16_t TOON_TABLE_14_L;
  volatile uint16_t TOON_TABLE_14_H;
  volatile uint16_t TOON_TABLE_15_L;
  volatile uint16_t TOON_TABLE_15_H;
  volatile uint8_t _pad18[64];
  volatile uint32_t GXFIFO;
  volatile uint8_t _pad19[60];
  volatile uint32_t MTX_MODE;
  volatile uint32_t MTX_PUSH;
  volatile uint32_t MTX_POP;
  volatile uint32_t MTX_STORE;
  volatile uint32_t MTX_RESTORE;
  volatile uint32_t MTX_IDENTITY;
  volatile uint32_t MTX_LOAD_4X4;
  volatile uint32_t MTX_LOAD_4X3;
  volatile uint32_t MTX_MULT_4X4;
  volatile uint32_t MTX_MULT_4X3;
  volatile uint32_t MTX_MULT_3X3;
  volatile uint32_t MTX_SCALE;
  volatile uint32_t MTX_TRANS;
  volatile uint8_t _pad20[12];
  volatile uint32_t COLOR;
  volatile uint32_t NORMAL;
  volatile uint32_t TEXCOORD;
  volatile uint32_t VTX_16;
  volatile uint32_t VTX_10;
  volatile uint32_t VTX_XY;
  volatile uint32_t VTX_XZ;
  volatile uint32_t VTX_YZ;
  volatile uint32_t VTX_DIFF;
  volatile uint32_t POLYGON_ATTR;
  volatile uint32_t TEXIMAGE_PARAM;
  volatile uint32_t TEXPLTT_BASE;
  volatile uint8_t _pad21[16];
  volatile uint32_t DIF_AMB;
  volatile uint32_t SPE_EMI;
  volatile uint32_t LIGHT_VECTOR;
  volatile uint32_t LIGHT_COLOR;
  volatile uint32_t SHININESS;
  volatile uint8_t _pad22[44];
  volatile uint32_t BEGIN_VTXS;
  volatile uint32_t END_VTXS;
  volatile uint8_t _pad23[56];
  volatile uint32_t SWAP_BUFFERS;
  volatile uint8_t _pad24[60];
  volatile uint32_t VIEWPORT;
  volatile uint8_t _pad25[60];
  volatile uint32_t BOX_TEST;
  volatile uint32_t POS_TEST;
  volatile uint32_t VEC_TEST;
  volatile uint8_t _pad26[52];
  volatile uint32_t GXSTAT;
  volatile uint16_t LISTRAM_COUNT;
  volatile uint16_t VTXRAM_COUNT;
  volatile uint8_t _pad27[8];
  volatile uint16_t DISP_1DOT_DEPTH;
  volatile uint8_t _pad28[14];
  volatile uint32_t POS_RESULT_X;
  volatile uint32_t POS_RESULT_Y;
  volatile uint32_t POS_RESULT_Z;
  volatile uint32_t POS_RESULT_W;
  volatile uint16_t VEC_RESULT_X;
  volatile uint16_t VEC_RESULT_Y;
  volatile uint16_t VEC_RESULT_Z;
  volatile uint8_t _pad29[10];
  volatile uint32_t CLIPMTX_RESULT_0;
  volatile uint32_t CLIPMTX_RESULT_1;
  volatile uint32_t CLIPMTX_RESULT_2;
  volatile uint32_t CLIPMTX_RESULT_3;
  volatile uint32_t CLIPMTX_RESULT_4;
  volatile uint32_t CLIPMTX_RESULT_5;
  volatile uint32_t CLIPMTX_RESULT_6;
  volatile uint32_t CLIPMTX_RESULT_7;
  volatile uint32_t CLIPMTX_RESULT_8;
  volatile uint32_t CLIPMTX_RESULT_9;
  volatile uint32_t CLIPMTX_RESULT_10;
  volatile uint32_t CLIPMTX_RESULT_11;
  volatile uint32_t CLIPMTX_RESULT_12;
  volatile uint32_t CLIPMTX_RESULT_13;
  volatile uint32_t CLIPMTX_RESULT_14;
  volatile uint32_t CLIPMTX_RESULT_15;
  volatile uint32_t VECMTX_RESULT_0;
  volatile uint32_t VECMTX_RESULT_1;
  volatile uint32_t VECMTX_RESULT_2;
  volatile uint32_t VECMTX_RESULT_3;
  volatile uint32_t VECMTX_RESULT_4;
  volatile uint32_t VECMTX_RESULT_5;
  volatile uint32_t VECMTX_RESULT_6;
  volatile uint32_t VECMTX_RESULT_7;
  volatile uint32_t VECMTX_RESULT_8;
};
static_assert((offsetof (struct graphics_engine_a, DISPCNT)) == 0x000);
static_assert((offsetof (struct graphics_engine_a, DISPSTAT)) == 0x004);
static_assert((offsetof (struct graphics_engine_a, VCOUNT)) == 0x006);
static_assert((offsetof (struct graphics_engine_a, BG0CNT)) == 0x008);
static_assert((offsetof (struct graphics_engine_a, BG1CNT)) == 0x00a);
static_assert((offsetof (struct graphics_engine_a, BG2CNT)) == 0x00c);
static_assert((offsetof (struct graphics_engine_a, BG3CNT)) == 0x00e);
static_assert((offsetof (struct graphics_engine_a, BG0HOFS)) == 0x010);
static_assert((offsetof (struct graphics_engine_a, BG0VOFS)) == 0x012);
static_assert((offsetof (struct graphics_engine_a, BG1HOFS)) == 0x014);
static_assert((offsetof (struct graphics_engine_a, BG1VOFS)) == 0x016);
static_assert((offsetof (struct graphics_engine_a, BG2HOFS)) == 0x018);
static_assert((offsetof (struct graphics_engine_a, BG2VOFS)) == 0x01a);
static_assert((offsetof (struct graphics_engine_a, BG3HOFS)) == 0x01c);
static_assert((offsetof (struct graphics_engine_a, BG3VOFS)) == 0x01e);
static_assert((offsetof (struct graphics_engine_a, BG2PA)) == 0x020);
static_assert((offsetof (struct graphics_engine_a, BG2PB)) == 0x022);
static_assert((offsetof (struct graphics_engine_a, BG2PC)) == 0x024);
static_assert((offsetof (struct graphics_engine_a, BG2PD)) == 0x026);
static_assert((offsetof (struct graphics_engine_a, BG2X)) == 0x028);
static_assert((offsetof (struct graphics_engine_a, BG2Y)) == 0x02c);
static_assert((offsetof (struct graphics_engine_a, BG3PA)) == 0x030);
static_assert((offsetof (struct graphics_engine_a, BG3PB)) == 0x032);
static_assert((offsetof (struct graphics_engine_a, BG3PC)) == 0x034);
static_assert((offsetof (struct graphics_engine_a, BG3PD)) == 0x036);
static_assert((offsetof (struct graphics_engine_a, BG3X)) == 0x038);
static_assert((offsetof (struct graphics_engine_a, BG3Y)) == 0x03c);
static_assert((offsetof (struct graphics_engine_a, WIN0H)) == 0x040);
static_assert((offsetof (struct graphics_engine_a, WIN1H)) == 0x042);
static_assert((offsetof (struct graphics_engine_a, WIN0V)) == 0x044);
static_assert((offsetof (struct graphics_engine_a, WIN1V)) == 0x046);
static_assert((offsetof (struct graphics_engine_a, WININ)) == 0x048);
static_assert((offsetof (struct graphics_engine_a, WINOUT)) == 0x04a);
static_assert((offsetof (struct graphics_engine_a, MOSAIC)) == 0x04c);
static_assert((offsetof (struct graphics_engine_a, BLDCNT)) == 0x050);
static_assert((offsetof (struct graphics_engine_a, BLDALPHA)) == 0x052);
static_assert((offsetof (struct graphics_engine_a, BLDY)) == 0x054);
static_assert((offsetof (struct graphics_engine_a, DISP3DCNT)) == 0x060);
static_assert((offsetof (struct graphics_engine_a, DISPCAPCNT)) == 0x064);
static_assert((offsetof (struct graphics_engine_a, DISP_MMEM_FIFO)) == 0x068);
static_assert((offsetof (struct graphics_engine_a, MASTER_BRIGHT)) == 0x06c);
static_assert((offsetof (struct graphics_engine_a, DMA0SAD)) == 0x0b0);
static_assert((offsetof (struct graphics_engine_a, DMA0DAD)) == 0x0b4);
static_assert((offsetof (struct graphics_engine_a, DMA0CNT)) == 0x0b8);
static_assert((offsetof (struct graphics_engine_a, DMA1SAD)) == 0x0bc);
static_assert((offsetof (struct graphics_engine_a, DMA1DAD)) == 0x0c0);
static_assert((offsetof (struct graphics_engine_a, DMA1CNT)) == 0x0c4);
static_assert((offsetof (struct graphics_engine_a, DMA2SAD)) == 0x0c8);
static_assert((offsetof (struct graphics_engine_a, DMA2DAD)) == 0x0cc);
static_assert((offsetof (struct graphics_engine_a, DMA2CNT)) == 0x0d0);
static_assert((offsetof (struct graphics_engine_a, DMA3SAD)) == 0x0d4);
static_assert((offsetof (struct graphics_engine_a, DMA3DAD)) == 0x0d8);
static_assert((offsetof (struct graphics_engine_a, DMA3CNT)) == 0x0dc);
static_assert((offsetof (struct graphics_engine_a, TM0CNT_L)) == 0x100);
static_assert((offsetof (struct graphics_engine_a, TM0CNT_H)) == 0x102);
static_assert((offsetof (struct graphics_engine_a, TM1CNT_L)) == 0x104);
static_assert((offsetof (struct graphics_engine_a, TM1CNT_H)) == 0x106);
static_assert((offsetof (struct graphics_engine_a, TM2CNT_L)) == 0x108);
static_assert((offsetof (struct graphics_engine_a, TM2CNT_H)) == 0x10a);
static_assert((offsetof (struct graphics_engine_a, TM3CNT_L)) == 0x10c);
static_assert((offsetof (struct graphics_engine_a, TM3CNT_H)) == 0x10e);
static_assert((offsetof (struct graphics_engine_a, KEYINPUT)) == 0x130);
static_assert((offsetof (struct graphics_engine_a, KEYCNT)) == 0x132);
static_assert((offsetof (struct graphics_engine_a, EXMEMCNT)) == 0x204);
static_assert((offsetof (struct graphics_engine_a, IME)) == 0x208);
static_assert((offsetof (struct graphics_engine_a, IE)) == 0x210);
static_assert((offsetof (struct graphics_engine_a, IF)) == 0x214);
static_assert((offsetof (struct graphics_engine_a, VRAMCNT)) == 0x240);
static_assert((offsetof (struct graphics_engine_a, WVRAMCNT)) == 0x244);
static_assert((offsetof (struct graphics_engine_a, VRAM_HI_CNT)) == 0x248);
static_assert((offsetof (struct graphics_engine_a, DIVCNT)) == 0x280);
static_assert((offsetof (struct graphics_engine_a, DIV_NUMER)) == 0x290);
static_assert((offsetof (struct graphics_engine_a, DIV_DENOM)) == 0x298);
static_assert((offsetof (struct graphics_engine_a, DIV_RESULT)) == 0x2a0);
static_assert((offsetof (struct graphics_engine_a, DIVREM_RESULT)) == 0x2a8);
static_assert((offsetof (struct graphics_engine_a, SQRTCNT)) == 0x2b0);
static_assert((offsetof (struct graphics_engine_a, SQRT_RESULT)) == 0x2b4);
static_assert((offsetof (struct graphics_engine_a, SQRT_PARAM)) == 0x2b8);
static_assert((offsetof (struct graphics_engine_a, POWCNT)) == 0x304);
static_assert((offsetof (struct graphics_engine_a, RDLINES_COUNT)) == 0x320);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_0_L)) == 0x330);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_0_H)) == 0x332);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_1_L)) == 0x334);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_1_H)) == 0x336);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_2_L)) == 0x338);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_2_H)) == 0x33a);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_3_L)) == 0x33c);
static_assert((offsetof (struct graphics_engine_a, EDGE_COLOR_3_H)) == 0x33e);
static_assert((offsetof (struct graphics_engine_a, ALPHA_TEST_REF)) == 0x340);
static_assert((offsetof (struct graphics_engine_a, CLEAR_COLOR)) == 0x350);
static_assert((offsetof (struct graphics_engine_a, CLEAR_DEPTH)) == 0x354);
static_assert((offsetof (struct graphics_engine_a, CLRIMAGE_OFFSET)) == 0x356);
static_assert((offsetof (struct graphics_engine_a, FOG_COLOR)) == 0x358);
static_assert((offsetof (struct graphics_engine_a, FOG_OFFSET)) == 0x35c);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_0_L)) == 0x360);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_0_H)) == 0x362);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_1_L)) == 0x364);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_1_H)) == 0x366);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_2_L)) == 0x368);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_2_H)) == 0x36a);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_3_L)) == 0x36c);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_3_H)) == 0x36e);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_4_L)) == 0x370);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_4_H)) == 0x372);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_5_L)) == 0x374);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_5_H)) == 0x376);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_6_L)) == 0x378);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_6_H)) == 0x37a);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_7_L)) == 0x37c);
static_assert((offsetof (struct graphics_engine_a, FOG_TABLE_7_H)) == 0x37e);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_0_L)) == 0x380);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_0_H)) == 0x382);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_1_L)) == 0x384);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_1_H)) == 0x386);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_2_L)) == 0x388);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_2_H)) == 0x38a);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_3_L)) == 0x38c);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_3_H)) == 0x38e);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_4_L)) == 0x390);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_4_H)) == 0x392);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_5_L)) == 0x394);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_5_H)) == 0x396);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_6_L)) == 0x398);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_6_H)) == 0x39a);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_7_L)) == 0x39c);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_7_H)) == 0x39e);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_8_L)) == 0x3a0);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_8_H)) == 0x3a2);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_9_L)) == 0x3a4);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_9_H)) == 0x3a6);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_10_L)) == 0x3a8);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_10_H)) == 0x3aa);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_11_L)) == 0x3ac);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_11_H)) == 0x3ae);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_12_L)) == 0x3b0);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_12_H)) == 0x3b2);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_13_L)) == 0x3b4);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_13_H)) == 0x3b6);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_14_L)) == 0x3b8);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_14_H)) == 0x3ba);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_15_L)) == 0x3bc);
static_assert((offsetof (struct graphics_engine_a, TOON_TABLE_15_H)) == 0x3be);
static_assert((offsetof (struct graphics_engine_a, GXFIFO)) == 0x400);
static_assert((offsetof (struct graphics_engine_a, MTX_MODE)) == 0x440);
static_assert((offsetof (struct graphics_engine_a, MTX_PUSH)) == 0x444);
static_assert((offsetof (struct graphics_engine_a, MTX_POP)) == 0x448);
static_assert((offsetof (struct graphics_engine_a, MTX_STORE)) == 0x44c);
static_assert((offsetof (struct graphics_engine_a, MTX_RESTORE)) == 0x450);
static_assert((offsetof (struct graphics_engine_a, MTX_IDENTITY)) == 0x454);
static_assert((offsetof (struct graphics_engine_a, MTX_LOAD_4X4)) == 0x458);
static_assert((offsetof (struct graphics_engine_a, MTX_LOAD_4X3)) == 0x45c);
static_assert((offsetof (struct graphics_engine_a, MTX_MULT_4X4)) == 0x460);
static_assert((offsetof (struct graphics_engine_a, MTX_MULT_4X3)) == 0x464);
static_assert((offsetof (struct graphics_engine_a, MTX_MULT_3X3)) == 0x468);
static_assert((offsetof (struct graphics_engine_a, MTX_SCALE)) == 0x46c);
static_assert((offsetof (struct graphics_engine_a, MTX_TRANS)) == 0x470);
static_assert((offsetof (struct graphics_engine_a, COLOR)) == 0x480);
static_assert((offsetof (struct graphics_engine_a, NORMAL)) == 0x484);
static_assert((offsetof (struct graphics_engine_a, TEXCOORD)) == 0x488);
static_assert((offsetof (struct graphics_engine_a, VTX_16)) == 0x48c);
static_assert((offsetof (struct graphics_engine_a, VTX_10)) == 0x490);
static_assert((offsetof (struct graphics_engine_a, VTX_XY)) == 0x494);
static_assert((offsetof (struct graphics_engine_a, VTX_XZ)) == 0x498);
static_assert((offsetof (struct graphics_engine_a, VTX_YZ)) == 0x49c);
static_assert((offsetof (struct graphics_engine_a, VTX_DIFF)) == 0x4a0);
static_assert((offsetof (struct graphics_engine_a, POLYGON_ATTR)) == 0x4a4);
static_assert((offsetof (struct graphics_engine_a, TEXIMAGE_PARAM)) == 0x4a8);
static_assert((offsetof (struct graphics_engine_a, TEXPLTT_BASE)) == 0x4ac);
static_assert((offsetof (struct graphics_engine_a, DIF_AMB)) == 0x4c0);
static_assert((offsetof (struct graphics_engine_a, SPE_EMI)) == 0x4c4);
static_assert((offsetof (struct graphics_engine_a, LIGHT_VECTOR)) == 0x4c8);
static_assert((offsetof (struct graphics_engine_a, LIGHT_COLOR)) == 0x4cc);
static_assert((offsetof (struct graphics_engine_a, SHININESS)) == 0x4d0);
static_assert((offsetof (struct graphics_engine_a, BEGIN_VTXS)) == 0x500);
static_assert((offsetof (struct graphics_engine_a, END_VTXS)) == 0x504);
static_assert((offsetof (struct graphics_engine_a, SWAP_BUFFERS)) == 0x540);
static_assert((offsetof (struct graphics_engine_a, VIEWPORT)) == 0x580);
static_assert((offsetof (struct graphics_engine_a, BOX_TEST)) == 0x5c0);
static_assert((offsetof (struct graphics_engine_a, POS_TEST)) == 0x5c4);
static_assert((offsetof (struct graphics_engine_a, VEC_TEST)) == 0x5c8);
static_assert((offsetof (struct graphics_engine_a, GXSTAT)) == 0x600);
static_assert((offsetof (struct graphics_engine_a, LISTRAM_COUNT)) == 0x604);
static_assert((offsetof (struct graphics_engine_a, VTXRAM_COUNT)) == 0x606);
static_assert((offsetof (struct graphics_engine_a, DISP_1DOT_DEPTH)) == 0x610);
static_assert((offsetof (struct graphics_engine_a, POS_RESULT_X)) == 0x620);
static_assert((offsetof (struct graphics_engine_a, POS_RESULT_Y)) == 0x624);
static_assert((offsetof (struct graphics_engine_a, POS_RESULT_Z)) == 0x628);
static_assert((offsetof (struct graphics_engine_a, POS_RESULT_W)) == 0x62c);
static_assert((offsetof (struct graphics_engine_a, VEC_RESULT_X)) == 0x630);
static_assert((offsetof (struct graphics_engine_a, VEC_RESULT_Y)) == 0x632);
static_assert((offsetof (struct graphics_engine_a, VEC_RESULT_Z)) == 0x634);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_0)) == 0x640);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_1)) == 0x644);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_2)) == 0x648);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_3)) == 0x64c);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_4)) == 0x650);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_5)) == 0x654);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_6)) == 0x658);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_7)) == 0x65c);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_8)) == 0x660);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_9)) == 0x664);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_10)) == 0x668);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_11)) == 0x66c);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_12)) == 0x670);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_13)) == 0x674);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_14)) == 0x678);
static_assert((offsetof (struct graphics_engine_a, CLIPMTX_RESULT_15)) == 0x67c);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_0)) == 0x680);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_1)) == 0x684);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_2)) == 0x688);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_3)) == 0x68c);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_4)) == 0x690);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_5)) == 0x694);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_6)) == 0x698);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_7)) == 0x69c);
static_assert((offsetof (struct graphics_engine_a, VECMTX_RESULT_8)) == 0x6a0);

extern struct graphics_engine_a graphics_engine_a __asm("graphics_engine_a");
